[tox]
envlist =
    flake8
    pylint
    bandit
    jshint
    readme
    clean

[testenv:bandit]
description = PyCQA security linter
deps = bandit<1.6
commands = bandit -r --ini tox.ini

[testenv:clean]
description = Remove Python bytecode and other debris
deps = pyclean
commands =
    rm -rf build/ dist/ djangocms_maps.egg-info/ node_modules/
    py3clean -v {toxinidir}
whitelist_externals =
    rm

[testenv:flake8]
description = Static code analysis and code style
deps = flake8
commands = flake8

[testenv:jshint]
description = Static code analysis and code style
whitelist_externals =
    jshint
    npm
commands =
    npm install jshint
    {toxinidir}/node_modules/jshint/bin/jshint --show-non-errors djangocms_maps

[testenv:pylint]
description = Check for errors and code smells
deps =
    aldryn-client
    django
    django-cms
    pylint-django
commands =
    pylint --rcfile tox.ini djangocms_maps setup aldryn_config

[testenv:readme]
description = Ensure README renders on PyPI
deps = twine
commands =
    {envpython} setup.py -q sdist bdist_wheel
    twine check dist/*

[bandit]
exclude = .cache,.git,.tox,build,dist,docs,tests
targets = .

[flake8]
exclude = .cache,.git,.tox,build,dist,djangocms_maps/migrations

[pylint]
[MASTER]
load-plugins = pylint_django
output-format = colorized
